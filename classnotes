## AWS step functions  
AWS Step Functions is a serverless function orchestrator that makes it easy to sequence AWS Lambda functions and multiple AWS services into business-critical applications. Through its visual interface, you can create and run a series of check pointed and event-driven workflows that maintain the application state. The output of one step acts as input into the next. Each step in your application executes in order and as expected based on your defined business logic.

Orchestrating a series of individual serverless applications, managing retries, and debugging failures can be challenging. As your distributed applications become more complex, the complexity of managing them also grows. Step Functions automatically manages error handling, retry logic, and state. With its built-in operational controls, Step Functions manages sequencing, removing a significant operational burden from your team. 
 AWS step functions works through configured workflows that you define. You coordinate individual tasks by expressing your workflow as a state machine. Individuals states make decisions based on their input, perform actions and pass their output to other states. Which would automate your workflow.  
Step Functions counts a **state transition** each time a step of your workflow is executed. You are charged for the total number of state transitions across all your state machines, including retries.
## AWS Data migration services 
AWS Database Migration Service helps you migrate databases to AWS quickly and securely. The source database remains fully operational during the migration, minimizing downtime to applications that rely on the database. The AWS Database Migration Service can migrate your data to and from most widely used commercial and open-source databases. 
 
AWS Database Migration Service supports homogeneous migrations such as Oracle to Oracle, as well as heterogeneous migrations between different database platforms, such as Oracle or Microsoft SQL Server to Amazon Aurora. With AWS Database Migration Service, you can continuously replicate your data with high availability and consolidate databases into a petabyte-scale data warehouse by streaming data to Amazon Redshift and Amazon S3. 

When migrating databases to Amazon Aurora, Amazon Redshift, Amazon DynamoDB or Amazon DocumentDB (with MongoDB compatibility) you can use  [DMS free](https://aws.amazon.com/dms/free-dms/)  for six months. 
When a code fragment cannot be automatically converted to the target language, AWS Database Migration Service will clearly document all locations that require manual input from the application developer.  You can use AWS DMS for multiple migration locations but you cannot migration to an on premises server from another on premises server.  

An **AWS** DMS **migration** consists of three **components**: a replication instance, source and target endpoints, and a replication task. You create an **AWS** DMS **migration** by creating the necessary replication instance, endpoints, and tasks in an **AWS** Region. 

## Cloud networking
In it's most basic form. a cloud-based network is a private IP address space into which you can deploy computing resources. IN AWS, this private network space is provided by an Amazon Virtual Private cloud component. Amazon VPC lets you provision a logically isolated section of the Amazon Web Services (AWS) cloud where you can launch AWS resources in a virtual network that you define. You have complete control over your virtual networking environment, including selection of your own IP address ranges, creation of subnets, and configuration of route tables and network gateways. You can also create a hardware Virtual Private Network (VPN) connection between your corporate datacenter and your VPC and leverage the AWS cloud as an extension of your corporate datacenter.  

A VPC can span multiple Avalibility Zones, and it's key component types include a: 

 - Subnet - A virtual private cloud (**VPC**) is a virtual network dedicated to your AWS account. A **subnet** is a range of IP addresses in your **VPC**. ... Instances in your **VPC** do not require public IP addresses to communicate with resources in the service. Traffic between your **VPC** and the other service does not leave the Amazon network.
 - Security group -A **security group** acts as a virtual firewall for your instance to control inbound and outbound traffic. When you launch an instance in a **VPC**, you can assign up to five **security groups** to the instance. ... Therefore, each instance in a subnet in your **VPC** can be assigned to a different set of **security groups**.
 - Primary network interface -A network interface's attributes follow it as it is attached or detached from an instance and reattached to another instance. When you move a network interface from one instance to another, network traffic is redirected to the new instance.
Each instance in your VPC has a default network interface (the primary network interface) that is assigned a private IPv4 address from the IPv4 address range of your VPC. You cannot detach a primary network interface from an instance. You can create and attach an additional network interface to any instance in your VPC. The number of network interfaces you can attach varies by instance type.
 - Virtual private gateway - A **virtual private gateway** is a logical, fully redundant distributed edge routing function that sits at the edge of your VPC. As it is capable of terminating **VPN** connections from your on-prem or customer environments, the VPG is the **VPN** concentrator on the Amazon side of the Site-to-Site **VPN** connection.
 - Customer gateway - A **customer gateway** is a resource that is installed on the **customer** side and is often linked to the provider side. ... A **customer gateway** is the anchor on your side of that connection. It can be a physical or software appliance. The anchor on the AWS side of the VPN connection is called a virtual private **gateway**
